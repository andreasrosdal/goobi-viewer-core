<ui:composition 
    xmlns="http://www.w3.org/1999/xhtml" 
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets" 
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:h="http://xmlns.jcp.org/jsf/html" 
    xmlns:f="http://xmlns.jcp.org/jsf/core" 
    xmlns:jsf="http://xmlns.jcp.org/jsf" 
    xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
    xmlns:viewer="http://xmlns.jcp.org/jsf/composite/components/partner" 
    xmlns:viewerComponent="http://xmlns.jcp.org/jsf/composite/components"
    xmlns:widgetComponent="http://xmlns.jcp.org/jsf/composite/components/widgets">

    <!-- IMAGE CONTAINER -->
    <div id="imageContainer" class="view-object__image">        
        <!-- MAP -->
        <div id="imageMap" class="view-object__image-map"></div>

        <!-- MOBILE IMAGE OVERLAY -->
        <div id="imageContainerMobileOverlay" class="view-object__image-mobile-overlay"></div>
    </div>

    <!-- OPEN SEADRAGON -->
    <script type="text/javascript" src="#{request.contextPath}/resources/javascript/libs/openseadragon/openseadragon.min.js"></script>
    <script type="text/javascript" src="#{request.contextPath}/resources/javascript/libs/openseadragon/openseadragon-viewerinputhook.js"></script>
    <script type="text/javascript" src="#{request.contextPath}/resources/javascript/dist/viewImage.min.js"></script>
    <script type="text/javascript">
  		//<![CDATA[
    	var imageMap = $( "#imageMap" );
        var imageUrl = "#{activeDocumentBean.viewManager.currentImageUrl}";
        var access = #{activeDocumentBean.viewManager.currentPage.accessForJs};
        var accessDeniedMessage = $( "<div />" ).addClass( "view-object__access-denied" ).html( '#{msg.noImage_accessDenied}' );
        var page = "#{navigationHelper.currentPage}";
        var configViewer = {
        	global: {
        		divId: "imageMap",
        		footerHeight: #{activeDocumentBean.viewManager.currentPage.getFooterHeight(navigationHelper.currentPage)},
        		adaptContainerHeight: true,
        		persistZoom: #{configurationBean.rememberImageZoom},
        		persistRotation: #{configurationBean.rememberImageRotation},
        		persistenceId: "#{activeDocumentBean.topDocumentIddoc}",
        		maxZoomLevel: 5,
        		controls : {
        		    rotateLeft: '.rotate-left',
        		    rotateRight: '.rotate-right',
        		    reset: '.reset',
        		}
        	},
        	image: {
        		mimeType: "#{activeDocumentBean.viewManager.currentPage.fullMimeType}",
	       		tileSource : '#{activeDocumentBean.viewManager.currentImageInfo}',
        		baseFooterUrl : "#{activeDocumentBean.viewManager.getWatermarkUrl(navigationHelper.currentPage)}",
        		highlightCoords: [
        			{
        				name: "searchHighlighting",
        				coordinates: #{activeDocumentBean.viewManager.currentSearchResultCoords},
        				displayTooltip: false,
        				pageIndex : #{activeDocumentBean.viewManager.currentPageSourceIndex},
        			},
		            {
		                name: "ugc",
		                coordinates: (function(coords){
		                    	return coords ? coords: [];
		                	})(#{contentBean.getCurrentUGCCoords(activeDocumentBean.viewManager.currentPage)}),
		                displayTooltip: true
		            }, {
		                name: "annotations",
		                coordinates: window.location.hash,
		                displayTooltip: false
		            }
        		]
        	}
        };
        
        // check for readingmode and change container height
        if ( $( '#readingMode' ).length > 0 ) {
        	configViewer.global.adaptContainerHeight = false;
        	configViewer.global.topMargin = $('#readingModeHeader').height();
        	
        }
                
       	// desktop object view
       	if ( access ) {
           	var viewImage = new ImageView.Image( configViewer )
           	
           	viewImage.load().then( function( osViewer ) {} ).catch( function( error ) {
           		console.error( "viewObject.xhtml - viewImage.init: Error opening image" );
           		imageMap.html( viewerJS.helper.renderAlert( "alert-danger", "#{msg.noImage_fileNotFound}: " + error, false ) );
           		
           		// reload image footer in readingmode
           		if ( page === "readingmode" ) {
                	$( window ).on( "resize orientationchange", function() {
                		viewImage.loadFooter();                    		
                	} );
                }
           	} );
        } 
       	else {
       		imageMap.append( accessDeniedMessage );
       	}

       	// mobile overlay
       	if ( window.matchMedia( '(max-width: 768px)' ).matches && page !== 'readingmode' ) {
       		$( "#imageContainerMobileOverlay" ).show();
       	}
      	//]]>
    </script>
</ui:composition>