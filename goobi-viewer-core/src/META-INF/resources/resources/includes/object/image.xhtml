<ui:composition 
    xmlns="http://www.w3.org/1999/xhtml" 
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets" 
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:h="http://xmlns.jcp.org/jsf/html" 
    xmlns:f="http://xmlns.jcp.org/jsf/core" 
    xmlns:jsf="http://xmlns.jcp.org/jsf" 
    xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
    xmlns:viewer="http://xmlns.jcp.org/jsf/composite/components/partner" 
    xmlns:viewerComponent="http://xmlns.jcp.org/jsf/composite/components"
    xmlns:widgetComponent="http://xmlns.jcp.org/jsf/composite/components/widgets">

    <!-- IMAGE CONTAINER -->
    <div id="imageContainer" class="view-object__image">        
        <!-- MAP -->
        <div id="imageMap" class="view-object__image-map"></div>

        <!-- MOBILE IMAGE OVERLAY -->
        <div id="imageContainerMobileOverlay" class="view-object__image-mobile-overlay"></div>
    </div>

	<popup id="share-image-area-popup">

		<div>
		<a href="#" data-copy="image-region-page"
			title="#{msg.bookmarkList_shareLink_copy}" ></a>
		</div>
		<div>
			<a href="#" data-copy="image-region-image"
			title="#{msg.bookmarkList_shareLink_copy}" ></a>
		</div>

	</popup>

	<!-- OPEN SEADRAGON -->
    <script type="text/javascript" src="#{request.contextPath}/resources/javascript/libs/openseadragon/openseadragon.min.js"></script>
    <script type="text/javascript" src="#{request.contextPath}/resources/javascript/libs/openseadragon/openseadragon-viewerinputhook.js"></script>
    <script type="text/javascript" src="#{request.contextPath}/resources/javascript/dist/imageView.min.js"></script>
    <script type="text/javascript">
  		//<![CDATA[
    	var imageMap = $( "#imageMap" );
        var access = #{activeDocumentBean.viewManager.currentPage.accessPermissionImage};
        var accessDeniedImagePath = "#{request.contextPath}/resources/themes/#{navigationHelper.theme}/images/access_denied.png";
        var accessDeniedImageWrapper = $( "<div />" ).addClass( "view-object__access-denied" ).html( '<img src="' + accessDeniedImagePath + '" />' );
        var page = "#{navigationHelper.currentPage}";

        var configViewer = {
        	global: {
        		divId: "imageMap",
        		bottomMargin: () => #{activeDocumentBean.viewManager.currentPage.getFooterHeight(navigationHelper.currentPage)},
        		adaptContainerHeight: #{activeDocumentBean.viewManager.currentPage.adaptImageViewHeight},
        		persistZoom: #{configurationBean.rememberImageZoom},
        		persistRotation: #{configurationBean.rememberImageRotation},
        		persistenceId: "#{activeDocumentBean.topDocumentIddoc}" + "_" + "#{navigationHelper.currentPage}",
        		maxZoomLevel: 5,
        		controls : {
        		    rotateLeft: '.rotate-left',
        		    rotateRight: '.rotate-right',
        		    reset: '.reset',
        		},
        		overlayGroups: [ {
                    name: "searchHighlighting",
                    styleClass: "coords-highlighting",
                    interactive: false
                }, {
                    name: "ugc",
                    styleClass: "ugcBox",
                    interactive: true
                
                },
                {
                    name: "annotations",
                    styleClass: "image-fragment",
                    interactive: false
                
                }],
        	},
        	image: {
        		mimeType: "#{activeDocumentBean.viewManager.currentPage.fullMimeType}",
	       		tileSource : '#{activeDocumentBean.viewManager.currentImageInfo}',
        		baseFooterUrl : "#{activeDocumentBean.viewManager.getWatermarkUrl(navigationHelper.currentPage)}",
        		highlightCoords: [
        			{
        				name: "searchHighlighting",
        				coordinates: #{activeDocumentBean.viewManager.currentSearchResultCoords},
        				displayTooltip: false,
        				pageIndex : #{activeDocumentBean.viewManager.currentPageSourceIndex},
        			},
		            {
		                name: "ugc",
		                coordinates: (function(coords){
		                    	return coords ? coords: [];
		                	})(#{contentBean.getCurrentUGCCoords(activeDocumentBean.viewManager.currentPage)}),
		                displayTooltip: true
		            }, {
		                name: "annotations",
		                coordinates: window.location.hash,
		                displayTooltip: false
		            }
        		]
        	}
        };
        
        // check for fullscreen and change container height 
        if ( $( '#fullscreen' ).length > 0 ) {
        	configViewer.global.adaptContainerHeight = false;
        	configViewer.global.topMargin = () => {
        	    var $header = $('#fullscreenHeader');
        	    if($header.is(":visible")) {
        	        return $header.height();
        	    } else {
        	        return 0;
        	    }
        	}
        	configViewer.global.rightMargin = () => {
        	    var $sidebar = $('#fullscreenViewSidebar');
        	    if(parseInt($sidebar.css("right")) < 0) {
        	        return 0;
        	    } else {
        	        return $sidebar.width();
        	    }
        	}
        }
                
        var areaSelect;
        function selectImageArea(button) {
            console.log("select image area ", button);
            $(button).addClass("active");
            areaSelect.startSelect().then( area => openShareAreaPopup(area, button) )   
        }
   		function openShareAreaPopup(area, triggerElement) {
   		 	areaSelect.stopSelect();
  		     $(triggerElement).removeClass("active");
   		 	var areaString = area.x.toFixed(0) + "," + area.y.toFixed(0) + "," + area.width.toFixed(0) + "," + area.height.toFixed(0);
   		 	var pageUrl = window.location.origin + window.location.pathname + "#xywh=" + areaString;
   		 	var imageUrl = viewImage.getConfig().image.tileSource;
   		 	if(Array.isArray(imageUrl)) {
   		 	    imageUrl = imageUrl[0];
   		 	}
   		 	imageUrl = imageUrl.replace("info.json", areaString + "/max/" + viewImage.getRotation() + "/default.jpg");
   		    let popup = new viewerJS.Popup($("body"), $("#share-image-area-popup"), {
   		        center: "center",
   		        top: "top",
   		        offset: {
   		            top: window.screen.height/2,
   		            left: 0
   		        }
   		    })
   		 	$("[data-copy='image-region-page']").attr("data-clipboard-text", pageUrl);
   		    $("[data-copy='image-region-page']").text(pageUrl);
   		    $("[data-copy='image-region-image']").attr("data-clipboard-text", imageUrl);
   		    $("[data-copy='image-region-image']").text(imageUrl);
   		    $('body').one("click", function() {
   		     	if(areaSelect) {
   		     	    areaSelect.remove(0);
   		     	}
   		    })
   		    $("[data-copy]").one("click", function(event) {
   		        console.log("popup click")
   		     	popup.$popup.off();
   		     	popup.$popup.remove();
                $('body').off("click.popup");
   		    })
   		}
        
       	// desktop object view
       	if ( access ) {
           	var viewImage = new ImageView.Image( configViewer )
           	viewImage.load().then( function( image ) {
           	    
           		// init area select
           		try {           		    
	           		let $cssTemplate = $("<div class='image-fragment'></div>");
	           		console.log("$cssTemplat", $cssTemplate, "color: " + $cssTemplate.css("border-color"))
	           		var areaSelectConfig = {
	           		     removeOldAreas : true,
	                     drawStyle : {
	                         borderColor: "#FF2523",
	                         borderWidth: 2,
	                         fillColor: "rgba(255,255,255,0.3)",
// 	                         borderColor: $cssTemplate.css("border-color"),
// 	                         borderWidth: parseInt($cssTemplate.css("border-width")),
// 	                         fillColor: $cssTemplate.css("background-color"),
	                     }
	           		};
	           		areaSelect = new ImageView.Tools.AreaSelect(image, areaSelectConfig);
           		} catch(error) {
           		    console.error("Error initializing area select: ", error);
           		}
           	} ).catch( function( error ) {
           		console.error( "viewObject.xhtml - viewImage.init: Error opening image" );
           		imageMap.html( viewerJS.helper.renderAlert( "alert-danger", "#{msg.noImage_fileNotFound}: " + error, false ) );
           		
           		// reload image footer in fullscreen
           		if ( page === "fullscreen" ) {
                	$( window ).on( "resize orientationchange", function() {
                		viewImage.loadFooter();                    		
                	} );
                }
           	} );
        } 
       	else {
       		imageMap.append( accessDeniedImageWrapper );
       	}

       	// mobile overlay
       	if ( window.matchMedia( '(max-width: 768px)' ).matches && page !== 'fullscreen' ) {
       		$( "#imageContainerMobileOverlay" ).show();
       	}
      	//]]>
    </script>
</ui:composition>