<ui:composition
    xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:jsf="http://xmlns.jcp.org/jsf"
	xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
	xmlns:composite="http://xmlns.jcp.org/jsf/composite"
	xmlns:viewerComponent="http://xmlns.jcp.org/jsf/composite/components"
	xmlns:viewerForms="http://xmlns.jcp.org/jsf/composite/components/forms">


    <composite:interface>
		<composite:attribute name="component" required="true"/>
    </composite:interface>

    <composite:implementation>

		<ui:fragment rendered="#{cc.attrs.component.hasAccess(userBean.user)}">

			<!-- CONTENT ITEM WITH SELECTED OPTIONS -->
			<div class="content-component content-component__rss
						-width-100 #{cc.attrs.hideOnScreenSizes}
						#{cc.attrs.hideOnScreenSizes == 'hideMobile' ? '-hiddenOnMobile' : ''} 
						#{cc.attrs.hideOnScreenSizes == 'hideDesktop' ? '-hiddenOnDesktop' : ''}
						#{cc.attrs.component.isPrivate() and cc.attrs.component.hasAccess(userBean.user) ? '-isPrivate' : ''}">

				<!-- INFO: CONTENT ITEM IS NOT PUBLISHED YET -->
				<ui:fragment rendered="#{cc.attrs.component.isPrivate() and cc.attrs.component.hasAccess(userBean.user)}">
					<div class="content-component__not-published-info">#{msg.content_not_published_yet}</div>
				</ui:fragment>


				<div class="tpl-rss__feed"></div>
				
				<script type="text/javascript">
                    $.ajax( {
                        url: "#{navigationHelper.applicationUrl}api/v1/records/rss/channel.json?max=#{cc.attrs.component.getContentItem('rss').content.elementsPerPage}&amp;lang=#{navigationHelper.localeString}",
                        type: "GET",
                        datatype: "JSON"
                    } ).then( function( data ) {
                        var rssFeedConfig = {};
                            
                        cmsJS.rssFeed.init( rssFeedConfig, data );
                    } );
                </script>
				
			</div>

		</ui:fragment>

    </composite:implementation>
</ui:composition>