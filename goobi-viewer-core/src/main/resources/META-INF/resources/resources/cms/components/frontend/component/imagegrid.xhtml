
<ui:composition xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:jsf="http://xmlns.jcp.org/jsf"
	xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
	xmlns:composite="http://xmlns.jcp.org/jsf/composite"
	xmlns:viewerComponent="http://xmlns.jcp.org/jsf/composite/components"
	xmlns:viewerForms="http://xmlns.jcp.org/jsf/composite/components/forms">


	<composite:interface>
		<composite:attribute name="component" required="true" />
		<composite:attribute name="imagelistItem" required="false"
			default="#{cc.attrs.component.firstContentItem}" />
	</composite:interface>

	<composite:implementation>


		<ui:fragment rendered="#{cc.attrs.component.hasAccess(userBean.user)}">

			<!-- CONTENT ITEM WITH SELECTED OPTIONS -->
			<div id="templateStaticGrid" class="tpl-static-grid
						-width-100 #{cc.attrs.hideOnScreenSizes}
						#{cc.attrs.hideOnScreenSizes == 'hideMobile' ? '-hiddenOnMobile' : ''} 
						#{cc.attrs.hideOnScreenSizes == 'hideDesktop' ? '-hiddenOnDesktop' : ''}
						#{cc.attrs.component.isPrivate() and cc.attrs.component.hasAccess(userBean.user) ? '-isPrivate' : ''}">

				<!-- INFO: CONTENT ITEM IS NOT PUBLISHED YET -->
				<ui:fragment
					rendered="#{cc.attrs.component.isPrivate() and cc.attrs.component.hasAccess(userBean.user)}">
					<div class="content-component__not-published-info">#{msg.cms__content_not_published_yet}</div>
				</ui:fragment>
                
                <!-- STATIC GRID -->
                <div class="tpl-static-grid__grid"></div>

                <script type="text/javascript">
                    $.ajax( {
                        url: "#{cc.attrs.component.getContent('grid').tileGridUrl}",
                        type: "GET",
                        datatype: "JSON"
                    } ).then( function( data ) {
                        var staticGridConfig = {
                            gridSelector: ".tpl-static-grid__grid",
                            language: currentLang
                        };
                        
                        cmsJS.staticGrid.init( staticGridConfig, data );
                    } );
                </script>

			</div>

		</ui:fragment>


	</composite:implementation>
</ui:composition>