<ui:composition 
    xmlns="http://www.w3.org/1999/xhtml" 
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets" 
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:h="http://xmlns.jcp.org/jsf/html" 
    xmlns:f="http://xmlns.jcp.org/jsf/core" 
    xmlns:jsf="http://xmlns.jcp.org/jsf" 
    xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
    xmlns:viewer="http://xmlns.jcp.org/jsf/composite/components/partner" 
    xmlns:viewerComponent="http://xmlns.jcp.org/jsf/composite/components"
    xmlns:widgetComponent="http://xmlns.jcp.org/jsf/composite/components/widgets">

	<div class="timematrix__subarea">
        <!-- LOADER -->
		<span class="timematrix__loader">
			<img src="#{request.contextPath}/resources/images/infinity_loader.gif" class="img-responsive" alt="Timematrix Loader" />
		</span> 
	</div>
    
	<div class="timematrix__selection">
		<form id="locateTimematrix" method="POST">
			<div class="timematrix__bar">
				<div class="timematrix__period">
					<span>#{msg.timePeriod}:</span>
					<input tabindex="+1" class="timematrix__selectionRangeInput" id="timematrixSelectionRangeInput1" value="#{configurationBean.timeMatrixStartYear}" />
					<span>-</span>
					<input tabindex="+1" class="timematrix__selectionRangeInput" id="timematrixSelectionRangeInput2" value="#{configurationBean.timeMatrixEndYear}" />
				</div>
				<div class="timematrix__hitsForm">
					<div class="timematrix__hitsInput">
						<span>#{msg.hits}:</span>
							<input type="text" id="hitsPerPage" class="hitsPerPage" name="hitsPerPage" value="#{configurationBean.timeMatrixHits}" placeholder="hits per page" />
					</div>
					<button type="submit" class="setTimematrix">#{msg.timematrixCalculate}</button>
				</div>
			</div>
			<div id="slider-range"></div>
			<button type="submit" id="setTimematrix" class="btn btn--full setTimematrix">#{msg.timematrixCalculate}</button>
		</form>
	</div>
	
	<div class="clearfix"></div>
 
	<div id="timematrixCanvas"></div>
	
	<div class="clearfix"></div>
	
	<timematrix></timematrix>

	<script>
	 //<![CDATA[
		<!-- Loads results when the page is reloaded -->
		$("document").ready(function() {
		    setTimeout(function() {
		        $(".setTimematrix").trigger('click');
		    },10);
		});
		
		<!-- Reloads the results after the slider is released -->
			var isDown = false;
			$("#slider-range").mousedown(function(){
			    isDown = true;
			});
			$(document).mouseup(function(){
			    if(isDown){
			    	document.getElementById("setTimematrix").click();
			        isDown = false;
			    }
			}); 

		<!-- Reloads the results after leaving the input field -->
		document.getElementById("hitsPerPage").onfocusout = function() {myFunction()};
		
		function myFunction() {
			document.getElementById("setTimematrix").click();
			
		}
		
	    <!-- Reloads the results after pressing the input field with Enter -->
		var input = document.getElementById("hitsPerPage");
		input.addEventListener("keyup", function(event) {
		  if (event.keyCode === 13) {
		   event.preventDefault();
		   document.getElementById("setTimematrix").click();
		  }
		});
    	//]]>
	</script>

   	<script>
   		var $startHere= $("#timematrixSelectionRangeInput1");
       	var $endHere= $("#timematrixSelectionRangeInput2");
       	var $count= $(".hitsPerPage");
      	
   		riot.mount('timematrix', {
      		msg: {
      			timematrixCalculate: "#{msg.timematrixCalculate}",
  	        	closeWindow: "#{msg.timematrixCloseWindow}",
  	        	goToWork: "#{msg.timematrixGoToWork}"
      		},
           	startInput: "#timematrixSelectionRangeInput1",
           	endInput: "#timematrixSelectionRangeInput2",
           	contextPath: "#{request.contextPath}/",
           	count: $( ".hitsPerPage" ),
           	button: ".setTimematrix",
           	loading: $('.timematrix__loader'),
           	loaderImg: "#{request.contextPath}/resources/images/infinity_loader.gif",
           	});
   	</script>
         
    <script type="text/javascript">
	     $(document).ready(function() {
	       	var timematrixConfig = {
	          contextPath: "#{request.contextPath}/",
	          rangeInput1: $( "#timematrixSelectionRangeInput1" ),
	          startDate: $( "#timematrixSelectionRangeInput1" ).val(),
	          rangeInput2: $( "#timematrixSelectionRangeInput2" ),
	       endDate: $( "#timematrixSelectionRangeInput2" ).val(),
	       count: $( ".hitsPerPage" ),
	       $tmCanvas: $( "#timematrixCanvas" ),
	       $tmCanvasPos: $( "#timematrixCanvas" ).position(),
	          lang: {
	          	closeWindow: "#{msg.timematrixCloseWindow}",
	          	goToWork: "#{msg.timematrixGoToWork}"	                  
	          }              	      
	       	};
	       	
	         viewerJS.timematrix.init( timematrixConfig );            	
	     });
    </script>
    	
   
</ui:composition>