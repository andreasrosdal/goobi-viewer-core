<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:jsf="http://xmlns.jcp.org/jsf"
	xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
	xmlns:o="http://omnifaces.org/ui"
	xmlns:viewer="http://xmlns.jcp.org/jsf/composite/components/partner"
	xmlns:viewerComponent="http://xmlns.jcp.org/jsf/composite/components"
	xmlns:widgetComponent="http://xmlns.jcp.org/jsf/composite/components/widgets">

	<!-- USER COMMENTS -->
	<ui:fragment
		rendered="#{activeDocumentBean.viewManager.allowUserComments}">
		<!-- JUMP TO THIS ANCHOR AFTER LOGIN -->
		<a name="userComments"></a>

		<div id="userComments" class="user-comments">
			<!-- USER NOT LOGGED IN -->
			<ui:fragment rendered="#{!userBean.loggedIn}">
				<div class="user-comments__message-login">
					<h3>#{msg.commentAdd}</h3>

					<h:outputText value="#{msg.commentDescription} " escape="false" />

					<br />

					<!-- TOGGLE LOGIN -->
					<button type="button" class="btn btn--link" data-toggle="modal"
						data-target="#userLoginModal" aria-label="#{msg.userNotLoggedIn}">
						<span>#{msg.login}</span>
					</button>
				</div>
			</ui:fragment>

			<h:form id="userCommentsForm" prependId="false">
				<ui:fragment rendered="#{userBean.loggedIn}">
					<h3>#{msg.userComments}</h3>
				</ui:fragment>

				<!-- EXISTING COMMENTS -->
				<ui:repeat var="comment"  varStatus="status"
					value="#{commentBean.commentsForCurrentPage}">
					<div class="user-comments__comment">
					
					<!-- START BLOCK - AUTHOR IMAGE/COMMENT INFO -->
					<div class="user-comments__comment-info">	
					
						<!-- USER IMAGE -->
						<div class="user-comments__comment-image">
							<img src="#{comment.creator.avatarUrl}" alt="User avatar" />
						</div>

						<!-- COMMENT METADATA -->
						<div class="user-comments__comment-metadata">
							<span class="user-comments__comment-metadata-creator">#{comment.creator.displayName}</span>
							<span class="user-comments__comment-metadata-date">#{navigationHelper.getLocalDate(comment.dateCreated)}</span>
						</div>
						
					</div>

						<!-- COMMENT CONTENT -->
						<div class="user-comments__comment-content">
							<!-- CONTENT LOADER -->
							<div class="user-comments__comment-content-loader"></div>

							<!-- COMMENT OPTIONS -->
							<ui:fragment
								rendered="#{userBean.loggedIn or comment.dateModified != null}">
								<div class="user-comments__comment-content-options">
								
									<!-- LAST CHANGE -->
									<h:panelGroup rendered="#{comment.dateModified != null}"
										styleClass="user-comments__comment-content-options-last-change">
                                        #{msg.lastEdited} #{navigationHelper.getLocalDate(comment.dateModified)}
                                    </h:panelGroup>
								</div>
							</ui:fragment>

								<!-- COMMENT TEXT -->
								<div class="user-comments__comment-content-text in">
									#{comment.displayText}</div>

									<!-- EDIT COMMENT -->
									<ui:fragment
										rendered="#{userBean.user == comment.creator or userBean.user.superuser}">

										<div class="user-comments__action-wrapper">
											<!-- TRIGGER EDIT COMMENT MODAL -->
											<button class="btn--clean user-comments__edit-comment-button" type="button" data-backdrop="false" data-toggle="modal" data-target="#modalUserCommentEdit-#{comment.id}-modal">
											  #{msg.edit}
											</button>
											
											<!-- DELETE COMMENT -->
											<ui:fragment
												rendered="#{userBean.loggedIn and (userBean.user == comment.creator or userBean.user.superuser)}">
												<button class="user-comments__delete-comment-button" type="button" data-delete="comment-#{comment.id}">
												  #{msg.delete}
												</button>
											</ui:fragment>
										</div>
									</ui:fragment>
								</div>	
						</div>
						
					<div id="modalUserCommentEdit-#{comment.id}" modalid="modalUserCommentEdit-#{comment.id}-modal" styleclass="user-comments-modal" title="#{msg.userCommentEdit}">
						<yield to="body">
						<div class="row">
<!-- 								<div class="col-12 col-md-3">#{msg.userCommentText}:</div> -->
								<div class="col-12 user-comments__comment-content-options-text-edit">
									<textarea id="modalUserCommentEdit-#{comment.id}-text">#{comment.text}</textarea>
								</div>
							</div>
						</yield>
						<yield to="footer">
							<button id="modalUserCommentEdit-#{comment.id}-cancel" class="btn" data-dismiss="modal">#{msg.cancel}</button>
							<button id="modalUserCommentEdit-#{comment.id}-ok" class="btn btn--success accept ml-3" data-dismiss="modal">#{msg.save}</button>
						</yield>
					</div>
					<h:commandScript name="editComment" action="#{commentBean.editComment}" render="@form"
						onevent="e => viewerJS.swaltoasts.onSuccess(e).success(&quot;#{msg.commentEditSuccess}&quot;)"
						onerror="e => viewerJS.swaltoasts.error(e.responseText)"/>
					<h:commandScript name="deleteComment" action="#{commentBean.deleteComment}" render="@form" 
						onevent="e => viewerJS.swaltoasts.onSuccess(e).success(&quot;#{msg.commentDeleteSuccess}&quot;)"
						onerror="e => viewerJS.swaltoasts.error(e.responseText)"/>
					
					<script> 
						riot.mount("#modalUserCommentEdit-#{comment.id}", "modal", {});
						$("#modalUserCommentEdit-#{comment.id}-ok").on("click", () => {
						    let val = $("#modalUserCommentEdit-#{comment.id}-text").val();
						    editComment({id:"#{comment.id}", text:val});
						})					
						$('[data-delete="comment-#{comment.id}"]').on('click', function() {
							viewerJS.notifications.confirm('', '' ,'', '#{msg.userCommentDeleteText}')
								.then((result) => deleteComment({id:"#{comment.id}"}))
								.catch(() => {});
						});
					</script>
						
				</ui:repeat>

				<!-- ADD COMMENT -->
				<ui:fragment rendered="#{userBean.loggedIn}">
					<div class="user-comments__add-comment">
						<label for="userCommentAdd"> <span>#{msg.userCommentAdd}</span>
						</label>
						<div class="user-comments__add-comment-add">
							<h:inputTextarea id="userCommentAdd"
								value="#{commentText}" />
						</div>
						<!-- LICENSE CHECKBOX/PUBLIC COMMENT -->
						<!-- <h:selectBooleanCheckbox id="commentLicenseCheckbox" value="#{commentRestricted}">Restricted</h:selectBooleanCheckbox>-->
						<div class="user-comments__add-comment-submit">
							<h:commandButton
								action="#{commentBean.createComment(commentText, commentRestricted)}"
								styleClass="btn btn--success" value="#{msg.addNoteText}">
								<f:ajax execute="userCommentAdd commentLicenseCheckbox" render="@form" 
								onevent="e => viewerJS.swaltoasts.onSuccess(e).success(&quot;#{msg.commentSaveSuccess}&quot;)"
								onerror="e => viewerJS.swaltoasts.error(e.responseText)"/>
							</h:commandButton>
						</div>
					</div>
				</ui:fragment>
			</h:form>
		</div>
				
		<script type="text/javascript">

            $( document ).ready( function() {
                viewerJS.userComments.init();

                jsf.ajax.addOnEvent( function( data ) {
                    var ajaxstatus = data.status;
            
                    switch ( ajaxstatus ) {
                    case "success":
                        viewerJS.userComments.init();
                        break;
                    }
                } );
            } );
        </script>
	</ui:fragment>
</ui:composition>