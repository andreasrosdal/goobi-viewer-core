<ui:composition
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:f="http://xmlns.jcp.org/jsf/core"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
    xmlns:viewerComponent="http://xmlns.jcp.org/jsf/composite/components"
    xmlns:adminWidget="http://xmlns.jcp.org/jsf/composite/admin/widgets"
    template="/resources/themes/#{navigationHelper.theme}/templateAdmin.html"
    xmlns:jsf="http://xmlns.jcp.org/jsf">

    <ui:define name="metadata">
        <f:metadata>
            <f:event
                type="preRenderView"
                listener="#{navigationHelper.setCurrentPageAdmin('adminMessageQueue')}" />
        </f:metadata>
    </ui:define>

    <ui:define name="content">
        <div id="adminAllUsers">
            <h:panelGroup rendered="#{userBean.admin}">
                <h:form
                    id="adminAllUserForm"
                    prependId="false">
                    <div class="admin__title-bar">
                        <!-- TITLE -->
                        <h1 class="admin__title">#{msg.admin__message_queue__title}</h1>
		                    <div class="admin__msg-queue-title-wrapper">
			                    
			                    <div class="admin__msg-queue-status">
		<!-- 							<div class="admin__msg-queue-icon-text">Status: #{messageQueueBean.paused ? 'stopped' : 'running'}</div> -->
									
									<div class="admin__msg-queue-icon-wrapper #{messageQueueBean.paused ? '-paused' : ''}" 
										data-js-trigger="#{messageQueueBean.paused ? 'resumeButton' : 'pauseButton'}"
										title="#{msg.admin__message_queue__resume_button_tooltip}"
										data-toggle="tooltip"
										data-placement="top"
										data-trigger="hover">
									<div class="admin__msg-queue-icon-loader"></div>
										<div class="admin__msg-queue-icon">
											<div class="admin__msg-queue-button-pause #{messageQueueBean.paused ? '-hidden' : '-active'}"><i class="fa fa-pause"></i></div>
				                        	<div class="admin__msg-queue-button-play #{messageQueueBean.paused ? '-active' : '-hidden'}"><i class="fa fa-play"></i></div>
										</div>
									</div>
								</div>
								
								<a class="admin__msg-queue-icon-wrapper #{messageQueueBean.paused ? '-paused' : ''}"
								title="#{msg.admin__message_queue__clear_all_button_tooltip}"
								data-toggle="tooltip"
								data-placement="top"
								data-trigger="hover"
		                        jsf:action="#{messageQueueBean.clearQueue}"
		                        jsf:id="clearButton"
		                        data-require-confirmation="true"
		                        data-confirmation-text="#{msg.admin__message_queue__clear_all_button_confirmation}"
		                        aria-label="#{msg.admin__message_queue__clear_all_button_confirmation}">
								<div class="admin__msg-queue-clear-all"></div>
									<div class="admin__msg-queue-icon">
										<div class="admin__msg-queue-button-trash #{messageQueueBean.paused ? '-hidden' : '-active'}"><i class="fa fa-times"></i></div>
									</div>
								</a>
		
							</div>
                    </div>


                    <viewerComponent:adminBreadcrumbs />
                    
                    <div class="admin__content-inner-content">
                    
                    <div class="admin__info-text">#{msg.admin__message_queue__info_text}</div>
                    
                    <h2><h:outputText value="#{msg.admin__message_queue__pending_tasks}" /></h2>

                    <!-- TODO style buttons, increase in size, add tooltip, change color of active button -->
                    <button
                        jsf:action="#{messageQueueBean.pauseQueue}"
                        jsf:id="pauseButton"
                        data-target="pauseButton"
                        class="btn">
                        <i class="fa fa-pause"></i>
                    </button>

                    <button
                        jsf:action="#{messageQueueBean.resumeQueue}"
                        jsf:id="resumeButton"
                        data-target="resumeButton"
                        class="btn">
                        <i class="fa fa-play"></i>
                    </button>

                    <ui:fragment rendered="#{!messageQueueBean.messageBrokerStart}">
                        <h:outputText value="#{msgs.admin__message_queue__queues_switched_off}" />
                    </ui:fragment>


                    <ui:fragment rendered="#{messageQueueBean.messageBrokerStart}">
                                <!-- INDIVIDUAL ROWS -->
                                <ui:repeat
                                    var="task"
                                    value="#{messageQueueBean.queueContent}">
                                    
                                    <div class="admin__boxed-entry">



								<h2 class="admin__msg-queue-task-title">
									<span class="admin__msg-queue-title-number" 
										title="#{msg.admin__message_queue__task_number_of_single_tasks}"
										data-toggle="tooltip"
										data-placement="top"
										data-trigger="hover">
										<h:outputText value="#{task.value}" />
									</span> <h:outputText value="#{msg[task.key]}" />
								</h2>
                                    
                                    <div class="admin__msg-queue-task-details-wrapper" data-target="showAllSingleTasks">

                                 		<div class="admin__msg-queue-task-details-column-heads">
                                 			<div>Identifier</div>
                                 			<div>Properties</div>
                                 		</div>
                                 		
                                    <ui:repeat
                                        var="msgqueueticket"
                                        value="#{messageQueueBean.getQueryMessages(task.key)}">

                                        <div class="admin__msg-queue-task-details-row">

                                            <div class="admin__msg-queue-task-details-row-entry">
                                                <h:outputText value="#{msgqueueticket.pi}" />
                                            </div>
                                            <div class="admin__msg-queue-task-details-row-entry">
                                                <ui:repeat
                                                    var="prop"
                                                    value="#{msgqueueticket.properties.keySet()}">
                                                    <h:outputText value="#{prop}: #{msgqueueticket.properties[prop]} " />
                                                    <br />
                                                </ui:repeat>
                                            </div>
                                            <div class="admin__msg-queue-task-details-row-entry">
                                                <button
                                                    jsf:action="#{messageQueueBean.deleteMessage(msgqueueticket)}"
                                                    class="btn admin__msg-queue-task-details-delete-button">
                                                    <i class="fa fa-times" />
                                                </button>
                                            </div>

                                        </div>
                                        
                                    </ui:repeat>
                                    
                                    </div>
                                 
                                       <!-- ACTIONS -->
                                       <div class="row admin__boxed-entry-actions">
                                           <div class="col-3 d-flex">
                                            <!-- SHOW DETAILS -->
                                            <a href="#" data-js-trigger="showAllSingleTasks" class="admin__boxed-entry-actions-edit" aria-label="show all tasks"><span data-target="showOrHideTasks">#{msg.show}</span><span class="admin__msg-queue-task-details-all-tasks-hidden-button" data-target="showOrHideTasks">#{msg.hide}</span></a>

                                            <!-- DELETE THIS --> 
                                            <button
                                                class="admin__boxed-entry-actions-delete -redlink"
                                                data-require-confirmation="true"
                                                data-confirmation-text="#{navigationHelper.getTranslationWithParamsUnescaped(msg.admin__message_queue__delete_message_type_confirmation, task.key)}"
                                                jsf:action="#{messageQueueBean.removeMessagesFromQueue}"
                                                aria-label="#{msg.delete}: #{task.key}" >
                                                #{msg.delete}
                                            </button> 

                                           </div>
                                       </div> 
                                 </div>
                                </ui:repeat>


                        <!--  history table -->

                        <h:panelGroup
                            id="history"
                            layout="block"
                            styleClass="message-history">

                            <h2><h:outputText value="#{msg.admin__message_queue__history}" /></h2>
                            <div class="admin__table-tools flex-wrap">
                                <!-- PAGINATOR -->
                                <div class="admin__table-paginator">
                                    <viewerComponent:dataTablePaginator tableValues="#{messageQueueBean.lazyModelViewerHistory}" />
                                </div>
                                <!-- FILTER -->
                                <div class="admin__table-filter b-3 mb-sm-0">
                                    <!-- TODO: ADD FILTER FOR targetPI, TOO 
                                        <viewerComponent:dataTableColumnFilter
                                            key="admin__comment_search"
                                            filter="#{messageQueueBean.lazyModelViewerHistory.getFilter('targetPI_body_campaign_dateCreated')}" />-->
                                </div>
                            </div>


                            <!-- ALL USER COMMENTS TABLE -->
                            <div
                                id="messagesHistoryTable"
                                class="admin__table-content"
                                role="grid"
                                aria-label="#{msg.messagesHistoryTable}">

                                <!-- TITLE ROW -->
                                <div
                                    class="row no-gutters admin__table-title"
                                    role="row">


                                    <div
                                        class="col-2 d-flex -sorting-arrow-trigger"
                                        role="columnheader">
                                        <h:outputText value="#{msg.admin__message_queue__message_id}" />
                                    </div>
                                    <div
                                        class="col-2 d-flex -sorting-arrow-trigger"
                                        role="columnheader">
                                        <h:outputText value="#{msg.admin__message_queue__message_type}" />
                                    </div>
                                    <div
                                        class="col-2 d-flex -sorting-arrow-trigger"
                                        role="columnheader">
                                        <h:outputText value="#{msg.admin__message_queue__pi}" />
                                    </div>
                                    <div
                                        class="col-2 d-flex -sorting-arrow-trigger"
                                        role="columnheader">
                                        <h:outputText value="#{msg.admin__message_queue__properties}" />
                                    </div>
                                    <div
                                        class="col-2 d-flex"
                                        role="columnheader">
                                        <h:outputText value="#{msg.admin__message_queue__last_update}" />
                                    </div>
                                    <div
                                        class="col-1 d-flex"
                                        role="columnheader">
                                        <h:outputText value="#{msg.admin__message_queue__status}" />
                                    </div>

                                    <div
                                        class="col-1 d-flex"
                                        role="columnheader">
                                        <h:outputText value="#{msg.admin__message_queue__retries}" />
                                    </div>
                                </div>

                                <div
                                    class="user-comments__table-body"
                                    role="presentation">

                                    <!-- INDIVIDUAL COMMENTS ROWS -->
                                    <ui:repeat
                                        var="message"
                                        value="#{messageQueueBean.lazyModelViewerHistory.paginatorList}">
                                        <div
                                            class="row no-gutters admin__table-entry"
                                            role="row">


                                            <div class="col-2 d-flex">
                                                <h:outputText value="#{message.messageId}" />
                                            </div>

                                            <div class="col-2 d-flex">
                                                <h:outputText value="#{msg[message.taskName]}" />
                                            </div>
                                            <div class="col-2 d-flex">
                                                <h:outputText value="#{message.pi}" />
                                            </div>
                                            <div class="col-2 d-flex">
                                                <ui:repeat
                                                    var="entry"
                                                    value="#{message.properties.entrySet().toArray()}">
                                                    <h:outputText value="#{msg[entry.key]}: #{msg[entry.value]} " />
                                                    <br />
                                                </ui:repeat>
                                            </div>
                                            <div class="col-2 d-flex">
                                                <h:outputText value="#{msg[message.lastUpdateTime]}" />
                                            </div>
                                            <div class="col-1 d-flex">
                                                <h:outputText value="#{msg[message.messageStatus]}" />
                                            </div>

                                            <div class="col-1 d-flex">
                                                <h:outputText value="#{message.retryCount}" />
                                            </div>
                                        </div>
                                    </ui:repeat>
                                </div>

                                <script>
                        $(document).ready(() => {
                            riot.mount( "annotationBody", {
                                    currentlang: "#{navigationHelper.localeString}",
                                    resturl: "#{configurationBean.restApiUrlV1}",
                                    geomap : {
                                        initialView : {
                                            zoom: #{configurationBean.geomapAnnotationZoom},
                                        },
                                    }
                            } );
                        });
            </script>

                            </div>

                        </h:panelGroup>

                    </ui:fragment>
                    </div>
                    
                </h:form>
            </h:panelGroup>
        </div>
		<script>
		$('[data-js-trigger="resumeButton"]').on('click', function() {
			$('.admin__msg-queue-icon-wrapper').toggleClass('-paused');
		    $('[ data-target="resumeButton"]').click();
		    $('.admin__msg-queue-button-pause, .admin__msg-queue-button-play').toggleClass('-hidden');
		});
		
		$('[data-js-trigger="pauseButton"]').on('click', function() {
			$('.admin__msg-queue-icon-wrapper').toggleClass('-paused');
			$('.admin__msg-queue-icon-wrapper').addClass('-stoppingStatus');
		    $('[ data-target="pauseButton"]').click();
		    $('.admin__msg-queue-button-pause, .admin__msg-queue-button-play').toggleClass('-hidden');
		});
		
		$('[data-js-trigger="clearAllButton"]').on('click', function() {
		    $('[ data-target="clearButton"]').click();
		});
		
		$('[data-js-trigger="showAllSingleTasks"]').on('click', function() {
			event.preventDefault();
		    $(this).closest('.admin__boxed-entry').find('[ data-target="showAllSingleTasks"]').slideToggle();
		    $(this).closest('.admin__boxed-entry').find('[ data-target="showOrHideTasks"]').toggle();
		});

		</script>
        <script type="text/javascript">
									var dataTableConfig = {
										dataTablePaginator : "#dataTablePaginator",
										txtField1 : "#txtMoveTo1",
										txtField2 : "#txtMoveTo2",
										totalCount : "#totalCount",
										reloadBtn : 'input[id*="cmdMoveTo"]',
									};

									viewerJS.dataTable.init(dataTableConfig);
								</script>
    </ui:define>

</ui:composition>
