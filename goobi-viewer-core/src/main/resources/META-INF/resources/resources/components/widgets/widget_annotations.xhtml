<ui:composition 
    xmlns="http://www.w3.org/1999/xhtml" 
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets" 
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:h="http://xmlns.jcp.org/jsf/html" 
    xmlns:f="http://xmlns.jcp.org/jsf/core" 
    xmlns:jsf="http://xmlns.jcp.org/jsf" 
    xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
    xmlns:viewer="http://xmlns.jcp.org/jsf/composite/components/partner"
    xmlns:composite="http://xmlns.jcp.org/jsf/composite" 
    xmlns:viewerComponent="http://xmlns.jcp.org/jsf/composite/components"
    xmlns:widgetComponent="http://xmlns.jcp.org/jsf/composite/components/widgets">

    <composite:interface />

    <composite:implementation>
		<!-- USER GENERATED CONTENT -->
		<h:panelGroup rendered="#{contentBean.getUserGeneratedContentsForDisplay(activeDocumentBean.viewManager.currentPage) != null}">
			<div id="widgetAnnotations" class="widget widget-annotations">
			
			
				<!-- TODO: IF MORE THAN 3 annotations > ELEMENT COLLAPSED -->
				<h3 class="widget__title #{activeDocumentBean.viewManager.metadataViewOnly ? '' : 'collapseable'}">
                    <span>#{msgcs.crowdsourcing_userGeneratedContent}</span>
                    <i class="fa fa-angle-down" aria-hidden="true"></i>
				</h3>


				<div class="widget__body collapseable">
					<nav id="user_generated_content_nav">
						<ul>
							<ui:repeat var="content" value="#{contentBean.getUserGeneratedContentsForDisplay(activeDocumentBean.viewManager.currentPage)}">
								<h:panelGroup rendered="#{content.label == ''?'false':'true'}">

									<h:panelGroup rendered="#{content.type == 'COMMENT'}">
										<li id="words-#{content.id}" class="widget-annotations__entry">
											<div class="widget-annotations__page"><span>3</span></div>
											<div class="widget-annotations__text">
												<h:outputText value="#{contentBean.cleanUpValue(content.label)}" escape="false"></h:outputText>
											</div>
										</li>
									</h:panelGroup>

									<h:panelGroup rendered="#{content.type == 'ADDRESS'}">
										<li id="words-#{content.id}" class="widget-annotations__entry">
											<div class="widget-annotations__page"><span>9</span></div>
											<div class="widget-annotations__text">
												<h:outputText value="#{contentBean.cleanUpValue(content.label)}" escape="false" />
											</div>
										</li>
									</h:panelGroup>

									<h:panelGroup rendered="#{content.type == 'PERSON'}">
										<li id="words-#{content.id}" class="widget-annotations__entry">
											<div class="widget-annotations__page"><span>27</span></div>
											<div class="widget-annotations__text">
												<h:outputText value="#{contentBean.cleanUpValue(content.label)}" escape="false" />
											</div>
										</li>
									</h:panelGroup>

									<h:panelGroup rendered="#{content.type == 'CORPORATION'}">
										<li id="words-#{content.id}" class="widget-annotations__entry">
											<div class="widget-annotations__page"><span>14</span></div>
											<div class="widget-annotations__text">
												<h:outputText value="#{contentBean.cleanUpValue(content.label)}" escape="false" />
											</div>
										</li>
									</h:panelGroup>

								</h:panelGroup>
								
								<script type="text/javascript">
									$("#words-#{content.id}").on('click', function(e) {
										e.preventDefault();
										viewImage.overlays.focusBox("ugc", "#{content.id}");
										highlightCurrentSelection($(this));
									});
								</script>
							</ui:repeat>
							
							<script type="text/javascript">
								//<![CDATA[
		                            var highlightCurrentSelection = function( $Obj ) {
		                            	// reset styles for all li elements
		                            	$( '#user_generated_content_nav li' ).removeClass( 'ugc-highlight' );
		                            	
		                            	// highlight clicked li element
		                            	$Obj.addClass( 'ugc-highlight' );
		                            };
		                            
		                            var coordinates = {
		                            	name: 'ugc',
		                            	displayTooltip: true,
		                            	coordinates:  #{contentBean.getCurrentUGCCoords(activeDocumentBean.viewManager.currentPage)}
		                            };
		                           
		                            // console.log("crowdsourcing coordinates: ", coordinates);
		                            if(configViewer.image && coordinates) {
		                            	if(!configViewer.image.highlightCoords) {
		                            		configViewer.image.highlightCoords = [];
		                            	}
		                            	configViewer.image.highlightCoords.push(coordinates);
		                            }
		                    	//]]>	
		                    </script>
						</ul>
					</nav>
				</div>
			</div>
		</h:panelGroup>
    </composite:implementation>
</ui:composition>
