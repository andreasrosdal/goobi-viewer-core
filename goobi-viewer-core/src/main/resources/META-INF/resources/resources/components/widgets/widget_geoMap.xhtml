<ui:composition 
    xmlns="http://www.w3.org/1999/xhtml" 
    xmlns:f="http://xmlns.jcp.org/jsf/core" 
    xmlns:h="http://xmlns.jcp.org/jsf/html" 
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
    xmlns:composite="http://xmlns.jcp.org/jsf/composite">

    <!-- INTERFACE OPTIONS -->
    <composite:interface>
        <composite:attribute name="widget" type="io.goobi.viewer.model.cms.CMSSidebarElement" required="true" />
    </composite:interface>

    <composite:implementation>
        <!-- WIDGET GEO LOCATIONS -->
        <h:panelGroup rendered="#{(cc.attrs.widget.type == 'widgetGeoMap' and cc.attrs.widget.geoMapId > -1) or cc.attrs.widget == null}">
            <!-- STANDARD -->
            <h:panelGroup rendered="#{cc.attrs.widget.widgetMode == 'STANDARD' or cc.attrs.widget.widgetMode == null}">
                <div id="widgetGeoMap_#{cc.attrs.widget.geoMapId}" class="widget widget-geomap #{cc.attrs.widget.cssClass}">
                    <h3>
                        #{cc.attrs.widget.geoMap.title}
                        <button id="expandMap_#{cc.attrs.widget.geoMapId}" class="btn btn--icon">
                        	<i class="fa fa-expand"/>
                        </button>
                    </h3>

                    <!-- MAP -->
                    <div id="geomapWidget_#{cc.attrs.widget.geoMapId}" class="widget-geomap__map"></div>
                </div>
            </h:panelGroup>
            <popover id="geoMapPopoverTemplate_#{cc.attrs.widget.geoMapId}">
           		<h4 data-metadata="title"></h4>
           		<span data-metadata="description"></span>
           	</popover>
            <script type="text/javascript">	  
          //<![CDATA[
            $(document).ready( () => {	
                
                $("#expandMap_#{cc.attrs.widget.geoMapId}").on("click", e => {
                    let oembedUrl = "#{cc.attrs.widget.geoMap.OEmbedURI}";
                    viewerJS.oembed(oembedUrl)
                    .then( $node => {
                        viewerJS.overlay($node)
                        .then( () => $node.remove());
                    })
                })
                
            	let geoMap = new viewerJS.GeoMap({
            	    popover: "#geoMapPopoverTemplate_#{cc.attrs.widget.geoMapId}",
            	    mapId: "geomapWidget_#{cc.attrs.widget.geoMapId}",
            	    language: "#{navigationHelper.localeString}",
            	    popoverOnHover: #{cc.attrs.widget.geoMap.type == 'SOLR_QUERY'}
            	});
            	let view = #{cc.attrs.widget.geoMap.initialView};
            	let features = #{cc.attrs.widget.geoMap.featuresAsString};
            	if(features && features.length > 0) {  
            	    $("#widgetGeoMap_#{cc.attrs.widget.geoMapId}").show();
	            	console.log("init map with ", view, features);
	            	geoMap.init();
	            	geoMap.setView(view);
	            	features.forEach(feature => {
	            	    geoMap.addMarker(feature);
	            	})
	            	geoMap.setView(geoMap.getViewAroundFeatures());
            	}
            })
            //]]>
	        </script>
        </h:panelGroup>
    </composite:implementation>
</ui:composition>
